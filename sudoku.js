
let mat1= [
    [5, 4, 2 ,9, 8, 7, 6, 1, 3],
    [8, 9, 6, 4, 3, 1, 5, 2, 7],
    [7, 3, 1, 6, 5, 2, 9, 8, 4],
    [4, 2, 5, 3, 1, 9, 7, 6, 8],
    [1, 8, 3, 2, 7, 6, 4, 5, 9],
    [6, 7, 9, 5, 4, 8, 2, 3, 1],
    [3, 1, 4, 7, 2, 5, 8, 9, 6],
    [2, 6, 7, 8, 9, 3, 1, 4, 5],
    [9, 5, 8, 1, 6, 4, 3, 7, 2]];

let mat2 = [
    [9, 1, 4, 7, 8, 2, 3, 6, 5],
    [3, 8, 5, 4, 1, 6, 7, 9, 2],
    [7, 2, 6, 5, 9, 3, 4, 1, 8],
    [8, 9, 2, 6, 3, 7, 5, 4, 1],
    [4, 6, 3, 2, 5, 1, 8, 7, 9],
    [5, 7, 1, 9, 4, 8, 2, 3, 6],
    [1, 4, 8, 3, 2, 9, 6, 5, 7],
    [2, 5, 7, 1, 6, 4, 9, 8, 3],
    [6, 3, 9, 8, 7, 5, 1, 2, 4]];

let mat3 = [
    [8, 1, 2, 7, 5, 3, 6, 4, 9],
    [9, 4, 3, 6, 8, 2, 1, 7, 5],
    [6, 7, 5, 4, 9, 1, 2, 8, 3],
    [1, 5, 4, 2, 3, 7, 8, 9, 6],
    [3, 6, 9, 8, 4, 5, 7, 2, 1],
    [2, 8, 7, 1, 6, 9, 5, 3, 4],
    [5, 2, 1, 9, 7, 4, 3, 6, 8],
    [4, 3, 8, 5, 2, 6, 9, 1, 7],
    [7, 9, 6, 3, 1, 8, 4, 5, 2]];

let mat4 = [
    [4, 2, 7, 3, 6, 9, 1, 8, 5],
    [6, 8, 5, 4, 7, 1, 2, 3, 9],
    [5, 3, 8, 7, 1, 6, 9, 4, 2],
    [2, 9, 4, 8, 3, 5, 7, 1, 6],
    [7, 6, 1, 9, 4, 2, 8, 5, 3],
    [8, 7, 6, 5, 9, 4, 3, 2, 1],
    [1, 5, 2, 6, 8, 3, 4, 9, 7],
    [9, 4, 3, 1, 2, 7, 5, 6, 8],
    [3, 1, 9, 2, 5, 8, 6, 7, 4]];

let mat5 = [
    [2, 7, 9, 6, 1, 5, 4, 3, 8],
    [3, 4, 1, 8, 7, 2, 6, 9, 5],
    [5, 6, 8, 3, 4, 9, 1, 2, 7],
    [6, 5, 7, 9, 2, 1, 3, 8, 4],
    [1, 8, 4, 5, 3, 7, 9, 6, 2],
    [9, 3, 2, 4, 6, 8, 5, 7, 1],
    [4, 2, 3, 7, 5, 6, 8, 1, 9],
    [8, 1, 6, 2, 9, 4, 7, 5, 3],
    [7, 9, 5, 1, 8, 3, 2, 4, 6]];

let mat6 = [
    [5, 3, 4, 6, 7, 8, 9, 1, 2],
    [6, 7, 2, 1, 9, 5, 3, 4, 8],
    [1, 9, 8, 3, 4, 2, 5, 6, 7],
    [8, 5, 9, 7, 6, 1, 4, 2, 3],
    [4, 2, 6, 8, 5, 3, 7, 9, 1],
    [7, 1, 3, 9, 2, 4, 8, 5, 6],
    [9, 6, 1, 5, 3, 7, 2, 8, 4],
    [2, 8, 7, 4, 1, 9, 6, 3, 5],
    [3, 4, 5, 2, 8, 6, 1, 7, 9]];

let mat7 = [
    [1, 5, 6, 3, 7, 2, 9, 4, 8],
    [3, 2, 4, 1, 9, 8, 5, 7, 6],
    [8, 7, 9, 4, 5, 6, 2, 1, 3],
    [4, 9, 8, 2, 6, 1, 3, 5, 7],
    [2, 3, 7, 9, 4, 5, 6, 8, 1],
    [6, 1, 5, 7, 8, 3, 4, 9, 2],
    [7, 6, 1, 5, 2, 9, 8, 3, 4],
    [5, 4, 2, 8, 3, 7, 1, 6, 9],
    [9, 8, 3, 6, 1, 4, 7, 2, 5]];

let mat8 = [
    [9, 5, 1, 8, 4, 3, 6, 7, 2],
    [4, 3, 8, 6, 2, 7, 1, 5, 9],
    [2, 7, 6, 1, 9, 5, 8, 3, 4],
    [1, 9, 5, 3, 8, 4, 7, 2, 6],
    [6, 2, 7, 5, 1, 9, 3, 4, 8],
    [8, 4, 3, 7, 6, 2, 5, 9, 1],
    [7, 6, 2, 9, 5, 1, 4, 8, 3],
    [3, 8, 4, 2, 7, 6, 9, 1, 5],
    [5, 1, 9, 4, 3, 8, 2, 6, 7]];

let mat9 = [
    [8, 1, 3, 7, 5, 4, 6, 2, 9],
    [6, 4, 2, 8, 3, 9, 5, 7, 1],
    [9, 7, 5, 6, 1, 2, 4, 8, 3],
    [5, 9, 8, 3, 2, 1, 7, 4, 6],
    [1, 3, 4, 5, 7, 6, 2, 9, 8],
    [2, 6, 7, 4, 9, 8, 3, 1, 5],
    [7, 2, 9, 1, 6, 3, 8, 5, 4],
    [3, 8, 1, 2, 4, 5, 9, 6, 7],
    [4, 5, 6, 9, 8, 7, 1, 3, 2]];

let mat10 = [
    [2, 1, 5, 6, 4, 7, 3, 9, 8],
    [3, 6, 8, 9, 5, 2, 1, 7, 4],
    [7, 9, 4, 3, 8, 1, 6, 5, 2],
    [5, 8, 6, 2, 7, 4, 9, 3, 1],
    [1, 4, 2, 5, 9, 3, 8, 6, 7],
    [9, 7, 3, 8, 1, 6, 4, 2, 5],
    [8, 2, 1, 7, 3, 9, 5, 4, 6],
    [6, 5, 9, 4, 2, 8, 7, 1, 3],
    [4, 3, 7, 1, 6, 5, 2, 8, 9]];


let archive = [mat1, mat2, mat3, mat4, mat5, mat6, mat7, mat8, mat9, mat10];
let rndNum = Math.floor(Math.random() * 10); // בחירת מס' רנדומלי בין 0 ל10
let gameChosen = archive[rndNum]; // בחירת משחק מתוך הארכיון לפי המיקום ברשימה שנבחר רנדומלית


function main(lvl){ // פונקציה שמקבלת את הרמה, בונה את הלוח ושולחת לפונקציה שמוחקת את התאים
    document.getElementById("levelMenu").style.display = 'none';
    document.getElementById("board").style.display = 'inline-block';

    for(let row = 0 ; row < 9 ; row++){
        for(let col = 0 ; col < 9 ; col++){
            document.getElementById(row + '' + col).value = gameChosen[row][col];
            document.getElementById(row + '' + col).disabled = true; // disabled = true כלומר שאי אפשר להכניס אינפוט
        }
    }
    eraseBoxes(lvl); // שולח לפונקציה שמוחקת מס' תאים לפי הרמה שנבחרה
}   


function eraseBoxes(lvl){ //  כלומר שאפשר להכניס אינפוטdisabled= falseונקציה שמוחקת את התאים. וכל תא שהיא מוחקת היא הופכת ל
    debugger;
    for(let i = 0 ; i < lvl ; i++){
        let rowRnd = Math.floor(Math.random() * 9);
        let colRnd = Math.floor(Math.random() * 9);
        if(document.getElementById(rowRnd + '' + colRnd).value != ''){
            document.getElementById(rowRnd + '' + colRnd).value= '';
            document.getElementById(rowRnd + '' + colRnd).disabled = false;   
        }
        else{
            i--;
        }
    }
}


function startOverGame (){ // פונקציה שמאפסת את הלוח כשלוחצים על כפתור again
    for(let row = 0 ; row < 9 ; row++){
        for(let col = 0 ; col < 9 ; col++){
            if (document.getElementById(row + '' + col).disabled == false){
                document.getElementById(row + '' + col).value= '';
                document.getElementById(row + '' + col).disabled = false;
            }
        }   
    }
}


function gameFinished (){ // פונקציה שבודקת אם הלוח שהמשתמש פתר זהה ללוח מהמאגר
    debugger;
    let flag = true;
    let msg = '';
    for(let row = 0 ; row < 9 ; row++){
        for(let col = 0 ; col < 9 ; col++){
            if (document.getElementById(row + '' + col).value != gameChosen[row][col]){
                flag = false;
                msg = 'Try Again';
                break;
            }
        }
        if (flag == false){
            break;
        }
    }

    if (flag == true){
        msg = 'Well done';
    }
    alert(msg);

    window.location.href = 'game.html';
}
